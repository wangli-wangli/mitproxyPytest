{
  "uid" : "cf61fd340944f3eb",
  "name" : "test_test_issuance_plan1",
  "fullName" : "test_dir.test_api2#test_test_issuance_plan1",
  "historyId" : "2c2fd5992b0db84281109fb9d6ad054e",
  "time" : {
    "start" : 1615368738931,
    "stop" : 1615368739046,
    "duration" : 115
  },
  "description" : "发行计划",
  "descriptionHtml" : "<p>发行计划</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
  "statusTrace" : "@pytest.mark.发行计划\n    def test_test_issuance_plan1():\n        '''发行计划'''\n        url = \"https://testapi.huxin315.com/cloud-service/api/enterprise/selectByUser\"\n        headers = {  # 设置http头部信息\n            'Host': 'testapi.huxin315.com',\n            'Authorization':'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJleHAiOjE2MTQyMzIwNjgsInVzZXJJZCI6Iklnbjd1aGZtcUV6ZkxsQmtoWENGNVI5cUc0c3lpWTNpU1dPWlpRbURENkkramJkY1FRTytBV3dUM2E2a1BVN1paTVlDc291aWhtSVlQZkdjcXlyZU9iTVNFK0UwRTlFM3ZodEMxeVBoa3IyN2hnc0crMEdudnBOcmdWOEYwMm5LZEd4dS9ZNGIxT1BTQ2F5aDEvZElRRmNyS1lCM3NvZzJKdHlHN0tBQjVsbz0iLCJpYXQiOjE2MTM2MjcyNjh9.nR7Zdx1UqiMef3ZelYNBFdqrXYHJrtSf2BvLFvWCUBwMgVHTBUzyNxiBlefJz2tspRInf4QVRH78UfEmxIhwwfy3B7v325mLYZnKTC1qfvG_U2P8l0JK_ew85yu5uDpUd1VijjpVUk4TXITmUmQlSInTm4YPjvSom0mVD-omOfqnk1k0gAXUGuNW6CFOERQs-ISrIm6k4P5BMvlDVUK9Z6RdDFNA5OddoU66ltTdhBo7PbGzhnzRJZ5T1Jiem4xvL3FtACCDRIlWcTj6MTXH4qrLAe6MwS9jpGYxSqRCHdYpAR6MqnNRAhtIkFhvKPiZnX5M0CFZlYPBYYPJfwGwmA',\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n        params='{\"pageNum\":1,\"authState\":1}'\n        params_byte=json.dumps(params,indent=4).encode()\n        headers_bype=json.dumps(headers,indent=4).encode()\n        url_bype = url.encode()\n        send_request=interface(url,headers,params)\n        response=send_request.send_request()\n    \n        response_text=response.text\n        response_json=json.loads(response_text)\n        response_byte = json.dumps(response_json, ensure_ascii=False,indent=4)\n        allure.attach(url_bype, \"url:\", allure.attachment_type.JSON)\n        allure.attach(headers_bype, \"headers:\", allure.attachment_type.JSON)\n        allure.attach(params_byte, \"请求参数:\", allure.attachment_type.JSON)\n        allure.attach(response_byte, \"响应参数:\", allure.attachment_type.JSON)\n        allure.attach(str(response.status_code).encode(), \"状态码:\", allure.attachment_type.JSON)\n        msg = response_json[\"msg\"]\n        code = response_json[\"code\"]\n        code_str=str(code)\n>       assert response.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_dir\\test_api2.py:73: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "发行计划",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
    "statusTrace" : "@pytest.mark.发行计划\n    def test_test_issuance_plan1():\n        '''发行计划'''\n        url = \"https://testapi.huxin315.com/cloud-service/api/enterprise/selectByUser\"\n        headers = {  # 设置http头部信息\n            'Host': 'testapi.huxin315.com',\n            'Authorization':'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJleHAiOjE2MTQyMzIwNjgsInVzZXJJZCI6Iklnbjd1aGZtcUV6ZkxsQmtoWENGNVI5cUc0c3lpWTNpU1dPWlpRbURENkkramJkY1FRTytBV3dUM2E2a1BVN1paTVlDc291aWhtSVlQZkdjcXlyZU9iTVNFK0UwRTlFM3ZodEMxeVBoa3IyN2hnc0crMEdudnBOcmdWOEYwMm5LZEd4dS9ZNGIxT1BTQ2F5aDEvZElRRmNyS1lCM3NvZzJKdHlHN0tBQjVsbz0iLCJpYXQiOjE2MTM2MjcyNjh9.nR7Zdx1UqiMef3ZelYNBFdqrXYHJrtSf2BvLFvWCUBwMgVHTBUzyNxiBlefJz2tspRInf4QVRH78UfEmxIhwwfy3B7v325mLYZnKTC1qfvG_U2P8l0JK_ew85yu5uDpUd1VijjpVUk4TXITmUmQlSInTm4YPjvSom0mVD-omOfqnk1k0gAXUGuNW6CFOERQs-ISrIm6k4P5BMvlDVUK9Z6RdDFNA5OddoU66ltTdhBo7PbGzhnzRJZ5T1Jiem4xvL3FtACCDRIlWcTj6MTXH4qrLAe6MwS9jpGYxSqRCHdYpAR6MqnNRAhtIkFhvKPiZnX5M0CFZlYPBYYPJfwGwmA',\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n        params='{\"pageNum\":1,\"authState\":1}'\n        params_byte=json.dumps(params,indent=4).encode()\n        headers_bype=json.dumps(headers,indent=4).encode()\n        url_bype = url.encode()\n        send_request=interface(url,headers,params)\n        response=send_request.send_request()\n    \n        response_text=response.text\n        response_json=json.loads(response_text)\n        response_byte = json.dumps(response_json, ensure_ascii=False,indent=4)\n        allure.attach(url_bype, \"url:\", allure.attachment_type.JSON)\n        allure.attach(headers_bype, \"headers:\", allure.attachment_type.JSON)\n        allure.attach(params_byte, \"请求参数:\", allure.attachment_type.JSON)\n        allure.attach(response_byte, \"响应参数:\", allure.attachment_type.JSON)\n        allure.attach(str(response.status_code).encode(), \"状态码:\", allure.attachment_type.JSON)\n        msg = response_json[\"msg\"]\n        code = response_json[\"code\"]\n        code_str=str(code)\n>       assert response.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_dir\\test_api2.py:73: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "50a54c970e78e66b",
      "name" : "url:",
      "source" : "50a54c970e78e66b.json",
      "type" : "application/json",
      "size" : 70
    }, {
      "uid" : "7816bc59499ec682",
      "name" : "headers:",
      "source" : "7816bc59499ec682.json",
      "type" : "application/json",
      "size" : 789
    }, {
      "uid" : "77621d49dbe96611",
      "name" : "请求参数:",
      "source" : "77621d49dbe96611.json",
      "type" : "application/json",
      "size" : 33
    }, {
      "uid" : "e37a0d1c11ab08fa",
      "name" : "响应参数:",
      "source" : "e37a0d1c11ab08fa.json",
      "type" : "application/json",
      "size" : 46
    }, {
      "uid" : "890330d61d624cb6",
      "name" : "状态码:",
      "source" : "890330d61d624cb6.json",
      "type" : "application/json",
      "size" : 3
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "发行计划"
  }, {
    "name" : "parentSuite",
    "value" : "test_dir"
  }, {
    "name" : "suite",
    "value" : "test_api2"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9I2MPS0"
  }, {
    "name" : "thread",
    "value" : "15856-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_dir.test_api2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "4d7e6e809a8bce6d",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368524458,
        "stop" : 1615368524573,
        "duration" : 115
      }
    }, {
      "uid" : "8955c8a957f7454c",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368494046,
        "stop" : 1615368494133,
        "duration" : 87
      }
    }, {
      "uid" : "6f152b2662095f03",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368393646,
        "stop" : 1615368393972,
        "duration" : 326
      }
    }, {
      "uid" : "8f792c1127743fbe",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368374542,
        "stop" : 1615368374643,
        "duration" : 101
      }
    }, {
      "uid" : "c117ec532cf97569",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368354695,
        "stop" : 1615368354773,
        "duration" : 78
      }
    }, {
      "uid" : "32e5e15d6d9d8883",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368172881,
        "stop" : 1615368172974,
        "duration" : 93
      }
    }, {
      "uid" : "77adc428c0f08e20",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368145014,
        "stop" : 1615368145122,
        "duration" : 108
      }
    }, {
      "uid" : "80ac1806edfef248",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615368092329,
        "stop" : 1615368092423,
        "duration" : 94
      }
    }, {
      "uid" : "d8360f34c6cbb188",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615367849331,
        "stop" : 1615367849442,
        "duration" : 111
      }
    }, {
      "uid" : "ca20176f0115a436",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615367816172,
        "stop" : 1615367816277,
        "duration" : 105
      }
    }, {
      "uid" : "c428e020a12654e",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615367725600,
        "stop" : 1615367725691,
        "duration" : 91
      }
    }, {
      "uid" : "1cc537993c34d873",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615367662331,
        "stop" : 1615367662434,
        "duration" : 103
      }
    }, {
      "uid" : "198c1a28ac8f6c13",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
      "time" : {
        "start" : 1615367452058,
        "stop" : 1615367452206,
        "duration" : 148
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "发行计划" ]
  },
  "source" : "cf61fd340944f3eb.json",
  "parameterValues" : [ ]
}